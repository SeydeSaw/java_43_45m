package algorithms.hw.hw_22_03_23;
/*  TODO: 28.03.23
        Имея отсортированный массив arr[] и число x, напишите функцию, которая подсчитывает вхождения x в arr[]. Ожидаемая временная сложность O(Log n)
        arr[] = {1, 1, 2, 2, 2, 2, 3,}
        x = 2
        Вывод: 4 раза
 */
public class CountInput {
    //метод для подсчета вхождения числа x в массив arr
    public static int countInput(int[] arr, int x) {
        //переменная счетчик для подсчета вхождений
        int count = 0;
        //индекс для начала поиска
        int start = 0;
        //индекс для конца поиска
        int end = arr.length - 1;
        //цикл до тех пор, пока начало поиска не будет меньше конца поиска
        while (start <= end) {
            //вычисляем середину поиска
            int mid = (start + end) / 2;
            //если число x равно середине массива
            if (arr[mid] == x) {
                //увеличиваем счетчик и двигаем начало поиска на одну позицию вправо
                count++;
                start = mid + 1;
            }
            //если число x меньше середины массива
            else if (arr[mid] > x)
                //двигаем конец поиска на одну позицию влево
                end = mid - 1;
                //если число x больше середины массива
            else
                //двигаем начало поиска на одну позицию вправо
                start = mid + 1;
        }
        //возвращаем счетчик вхождений
        return count;
    }
    //метод main
    public static void main(String[] args) {
        //создаем массив
        int[] arr = {1, 1, 2, 2, 2, 2, 3};
        //создаем число для поиска
        int x = 2;
        //выводим результат в консоль
        System.out.println("Количество вхождений числа " + x + " в массиве: " + countInput(arr, x));
    }
}